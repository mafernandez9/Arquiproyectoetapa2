DATA:
score1 0
score2 0
rock 1
paper 2
scissor 4
inv1 8
inv2 16
play1 0
play2 0
win_var 3
switch 1 //switch de inicio sera el primero
time 5 //tiempo de cuenta regresiva
limit 0 //tiempo limite

CODE:

wait:
MOV B, 0
MOV (0), B
MOV A, (3)
MOV (2), A
MOV A, (switch)
MOV B, (1)
CMP A, B
JNE wait

MOV A, 0
MOV B, 0
 
// esperar boton
MOV A, 1
MOV (0), A
wait_btn1:
MOV B, 0
MOV A, (3)
CMP A, B
JEQ wait_btn1

//revisar validez
MOV B, (inv1)
CMP A, B
JEQ wait_btn1
MOV B, (inv2)
CMP A, B
JEQ wait_btn1
MOV (play1), A //guardamos eleccion jugador 1

//delay para no confundir botones
MOV A, (4)
ADD A, 2
MOV B, A
interval:
MOV A, (4)
CMP A, B
JNE interval


// esperar boton
MOV A, 2
MOV (0), A
MOV B, 0
wait_btn2:
MOV B, 0
MOV A, (3)
CMP A, B
JEQ wait_btn2

MOV B, (inv1)
CMP A, B
JEQ wait_btn1
MOV B, (inv2)
CMP A, B
JEQ wait_btn1
MOV (play2), A //guardamos eleccion jugador 2 

//cargamos la jugada en la variable
MOV A, (play1)
MOV B, (rock)
CMP A, B
JEQ player1_rock

//cargamos la jugada en la variable
MOV A, (play1)
MOV B, (paper)
CMP A, B
JEQ player1_paper

//cargamos la jugada en la variable
MOV A, (play1)
MOV B, (scissor)
CMP A, B
JEQ player1_scissor

player1_rock:
MOV A, (play2)
MOV B, (rock)
CMP A, B
JEQ draw
MOV B, (paper)
CMP A, B
JEQ player2_win
MOV B, (scissor)
CMP A, B
JEQ player1_win


player1_paper:
MOV A, (play2)
MOV B, (rock)
CMP A, B
JEQ player1_win
MOV B, (paper)
CMP A, B
JEQ draw
MOV B, (scissor)
CMP A, B
JEQ player2_win

player1_scissor:
MOV A, (play2)
MOV B, (rock)
CMP A, B
JEQ player2_win
MOV B, (paper)
CMP A, B
JEQ player1_win
MOV B, (scissor)
CMP A, B
JEQ draw

draw:
INC (score1)
INC (score2)
//Mostrar ganador ronda
MOV A, 13
MOV (2), A
JMP check_score

player1_win:
INC (score1)
//Mostrar ganador ronda
MOV A, 1
MOV (2), A
JMP check_score

player2_win:
INC (score2)
//Mostrar ganador ronda
MOV A, 2
MOV (2), A
JMP check_score

check_score:
MOV A, (score1)
MOV B, (win_var)
CMP A, B 
JEQ end1

MOV A, (score2)
MOV B, (win_var)
CMP A, B 
JEQ end_player2_win
JMP wait_round

end1:
MOV A, (score2)
MOV B, (win_var)
CMP A, B
JEQ end_draw
JMP end_player1_win

end_player1_win:
MOV A, AAAAh
MOV (0), A
//limpiar scores
MOV A, 0
MOV (score1), A
MOV(score2), A
MOV A, 1
MOV (2), A
JMP wait_round

end_player2_win:
MOV A, AAAAh
MOV (0), A
MOV A, 0
MOV (score1), A
MOV(score2), A
MOV A, 2
MOV (2), A
JMP wait_round

end_draw:
MOV A, AAAAh
MOV (0), A
MOV A, 0
MOV (score1), A
MOV(score2), A
MOV A, 13
MOV (2), A
JMP wait_round

wait_round:
MOV A, (5)
OR A, 31
MOV (0), A
MOV B, 0
MOV A, (1)
CMP A, B
JNE wait_round
JMP wait